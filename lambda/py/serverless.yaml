service: radioGalegaAlexa

provider:
  name: aws
  runtime: python3.7
  region: eu-west-1
  stage: dev
  environment:
    STATE: ${self:custom.stage}
    VERSION: "develop"
    ASSETS_URL: https://${self:custom.s3AssetsBucket}.s3-${self:provider.region}.amazonaws.com
    STREAM_URL: https://${self:custom.s3AssetsBucket}.s3-${self:provider.region}.amazonaws.com/live.mp3.m3u

plugins:
  - serverless-python-requirements
  - serverless-s3-deploy

custom:
  stage: ${opt:stage, self:provider.stage}
  s3AssetsBucket: alexa-radio-galega-assets-${self:custom.stage}
  pythonRequirements:
    dockerizePip: non-linux
  assets:
    targets:
      - bucket: ${self:custom.s3AssetsBucket}
        files:
          - source: ../..
            globs: "*.jpg"
      - bucket: ${self:custom.s3AssetsBucket}
        files:
          - source: ../..
            globs: "*.m3u"

resources:
  Resources:
    S3RadioGalega:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3AssetsBucket}
        AccessControl: PublicRead
    WebAppS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: S3RadioGalega
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.s3AssetsBucket}/*

package:
  exclude:
    - node_modules

functions:
  radioGalegaSkill:
    handler: lambda_function.lambda_handler
    events:
      - alexaSkill:
          appId: amzn1.ask.skill.7ff19e3d-a21e-4b3b-bfe3-11b8f9bc273b
          enabled: true
